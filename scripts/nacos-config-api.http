### Nacos 配置管理 API 测试

# Nacos 服务器地址
@nacos_server = http://localhost:18848

### 1. 登录获取 Token (如果启用了权限验证)
POST {{nacos_server}}/nacos/v1/auth/login
Content-Type: application/x-www-form-urlencoded

username=nacos&password=nacos

### 2. 创建公共配置 (common-config.yml)
POST {{nacos_server}}/nacos/v1/cs/configs
Content-Type: application/x-www-form-urlencoded

dataId=common-config.yml&group=DEFAULT_GROUP&content=# 公共配置文件 - 所有服务共享
logging:
  level:
    com.alibaba.nacos: INFO
    com.alibaba.cloud.nacos: INFO
    org.springframework.cloud: INFO
    root: INFO
    com.demo: DEBUG

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: refresh,health,info,metrics

# 公共业务配置
demo:
  common:
    app-name: "Spring Cloud Demo"
    environment: "development"
    timezone: "Asia/Shanghai"
    feature-flags:
      enable-metrics: true
      enable-tracing: false

### 3. 创建网关路由配置 (gateway-routes.yml)
POST {{nacos_server}}/nacos/v1/cs/configs
Content-Type: application/x-www-form-urlencoded

dataId=gateway-routes.yml&group=DEFAULT_GROUP&content=spring:
  cloud:
    gateway:
      routes:
        # 路由到 server01 服务
        - id: server01_route
          uri: lb://server01-service
          predicates:
            - Path=/server01/**
          filters:
            - StripPrefix=1
            - AddResponseHeader=X-Response-From, Gateway
            - AddResponseHeader=X-Route-Version, v1.0

        # 路由到 server02 服务
        - id: server02_route
          uri: lb://server02-service
          predicates:
            - Path=/server02/**
          filters:
            - StripPrefix=1
            - AddResponseHeader=X-Response-From, Gateway
            - AddResponseHeader=X-Route-Version, v1.0

        # API路由
        - id: api_route
          uri: lb://server01-service
          predicates:
            - Path=/api/**
          filters:
            - AddRequestHeader=X-Gateway-Request, true

      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

# Gateway 特定配置
demo:
  gateway:
    version: "1.0.0"
    enable-cors: true
    enable-rate-limit: false
    default-timeout: 30000

### 4. 创建 Server01 配置 (server01-config.yml)
POST {{nacos_server}}/nacos/v1/cs/configs
Content-Type: application/x-www-form-urlencoded

dataId=server01-config.yml&group=DEFAULT_GROUP&content=# Server01 服务特定配置
demo:
  server01:
    message: "Hello from Server01 (Nacos Config)"
    version: "2.0.0"
    enableDebug: true
    maxConnections: 200
    timeout: 8000
    features:
      - "feature-a"
      - "feature-b"
      - "enhanced-logging"

# 数据库配置示例
spring:
  datasource:
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000

### 5. 创建 Server02 配置 (server02-config.yml)
POST {{nacos_server}}/nacos/v1/cs/configs
Content-Type: application/x-www-form-urlencoded

dataId=server02-config.yml&group=DEFAULT_GROUP&content=# Server02 服务特定配置
demo:
  server02:
    message: "Hello from Server02 (Nacos Config)"
    version: "2.0.0"
    enableFeatureX: true
    batchSize: 100
    retryAttempts: 5
    allowedUsers:
      - "admin"
      - "user1"
      - "user2"

# 业务配置示例
business:
  processing:
    enabled: true
    max-queue-size: 1000
    worker-threads: 4

### 6. 查询所有配置
GET {{nacos_server}}/nacos/v1/cs/configs?dataId=&group=&pageNo=1&pageSize=10

### 7. 查询特定配置
GET {{nacos_server}}/nacos/v1/cs/configs?dataId=server01-config.yml&group=DEFAULT_GROUP

### 8. 更新配置示例 - 修改 Server01 消息
POST {{nacos_server}}/nacos/v1/cs/configs
Content-Type: application/x-www-form-urlencoded

dataId=server01-config.yml&group=DEFAULT_GROUP&content=# Server01 服务特定配置 - 已更新
demo:
  server01:
    message: "Hello from Server01 (Updated via Nacos)"
    version: "2.1.0"
    enableDebug: false
    maxConnections: 300
    timeout: 10000
    features:
      - "feature-a"
      - "feature-b"
      - "enhanced-logging"
      - "new-feature"

### 9. 删除配置 (谨慎使用)
# DELETE {{nacos_server}}/nacos/v1/cs/configs?dataId=test-config&group=DEFAULT_GROUP
